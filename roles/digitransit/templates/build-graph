#! /bin/bash -e

PBF_DOWNLOAD_URL="{{ osm_url }}"
PBF_FILE="opentripplanner.osm.pbf"

GTFS_DOWNLOAD_URLS=({% for url in gtfs_urls %} "{{ url }}"  {% endfor %})
CARPOOL_GTFS_DOWNLOAD_URL="{{ mfdz_gtfs_url }}"

ELEVATION_BASE_URL="https://srtm.csi.cgiar.org/wp-content/uploads/files/srtm_5x5/TIFF/"
ELEVATION_FILES=("srtm_38_01" "srtm_38_03" "srtm_39_03" "srtm_38_02" "srtm_39_01" "srtm_39_02")

IMAGE_NAME="mfdz/opentripplanner:{{ otp_docker_tag }}"
CONTAINER_NAME="graph-build"

BUILD_DIR=build
OUTPUT_DIR=latest

docker stop $CONTAINER_NAME || true

mkdir -p build
cd build

for i in "${ELEVATION_FILES[@]}"
do
  :
  zipfile="${i}.zip"
  tiffile="${i}.tif"
  if [ -f "$tiffile" ]; then
    echo "$zipfile exists."
  else
    echo "$tiffile does not exist. Downloading ..."
    curl --fail --location -s "${ELEVATION_BASE_URL}{$zipfile}" -o ${zipfile}
    unzip ${zipfile} ${tiffile}
    rm ${zipfile}
  fi
done


curl --location --fail -s "${PBF_DOWNLOAD_URL}" -o ${PBF_FILE}

rm -rf gtfs.zip
rm -rf *.gtfs.zip

if [ -z "${CARPOOL_GTFS_DOWNLOAD_URL}" ]; then
  echo "No download URL for carpool. Not downloading."
else
  curl --location --fail -s "${CARPOOL_GTFS_DOWNLOAD_URL}" -o mfdz.gtfs.zip
fi

for i in "${GTFS_DOWNLOAD_URLS[@]}"
do
  :
  hash=`cksum <<< "${i}"s | cut -f 1 -d ' '`
  output="${hash}.gtfs.zip"
  curl -L --fail ${i} -o ${output}
done

docker pull ${IMAGE_NAME}
docker run \
  -v /var/graph-build/${BUILD_DIR}:/opt/opentripplanner/graph \
  --name ${CONTAINER_NAME} \
  --rm \
  --cpu-shares 512 \
  -e JAVA_OPTS="-Xmx20G" \
  ${IMAGE_NAME} --build --save graph \

echo "${IMAGE_NAME}" > otp-image-version

cd ..
mkdir -p ${OUTPUT_DIR}
cp ${BUILD_DIR}/graph.obj  ${OUTPUT_DIR}/
cp ${BUILD_DIR}/*.json ${OUTPUT_DIR}

if [ -d "${BUILD_DIR}/report" ]; then
  cp -r "${BUILD_DIR}/report/" "${OUTPUT_DIR}"
fi


send-to-matrix "üì¶Ô∏è OTP graph build complete on {{ inventory_hostname }}"
